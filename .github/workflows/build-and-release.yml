name: Build-and-release

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    tags:
      - "*"

#env:
#  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          #- { target: aarch64-unknown-linux-gnu     , os: ubuntu-20.04, use-cross: true }
          #- { target: aarch64-unknown-linux-musl    , os: ubuntu-20.04, use-cross: true }
          #- { target: armv7-unknown-linux-gnueabihf , os: ubuntu-20.04, use-cross: true }
          #- { target: armv7-unknown-linux-musleabihf, os: ubuntu-20.04, use-cross: true }
          - { target: mips-unknown-linux-gnu ,        os: ubuntu-20.04, use-cross: true }
          #- { target: mips-unknown-linux-musl,        os: ubuntu-20.04                  }
          # - { target: i686-pc-windows-msvc        , os: windows-2019                  }
          # - { target: i686-unknown-linux-gnu      , os: ubuntu-20.04, use-cross: true }
          # - { target: i686-unknown-linux-musl     , os: ubuntu-20.04, use-cross: true }
          # - { target: x86_64-apple-darwin         , os: macos-10.15                   }
          # - { target: x86_64-pc-windows-gnu       , os: windows-2019                  }
          # - { target: x86_64-pc-windows-msvc        , os: windows-2019                  }
          # - { target: x86_64-unknown-linux-gnu      , os: ubuntu-20.04                  }
          # - { target: x86_64-unknown-linux-musl     , os: ubuntu-20.04, use-cross: true }
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          default: true
          override: true
          profile: minimal # minimal component installation (ie, no documentation)
          
    - name: Build
      uses: actions-rs/cargo@v1
      with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target ${{ matrix.job.target }}
          
    - name: Move binaries
      run: |
          mkdir artifacts/
          mv target/${{ matrix.job.target }}/release/test1 artifacts/test1-${{ matrix.job.target }}

    - name: show info
      run: |
        echo ${{ github.ref }}
        ls -llah artifacts/

    - name: Release binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        #prerelease: true
        files: artifacts/*

